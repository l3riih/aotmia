#!/usr/bin/env python3

import sys
import os
sys.path.append('.')

print("üîç Debug del sistema ag√©ntico Atomia")
print("=" * 50)

try:
    print("‚úì Python executable:", sys.executable)
    print("‚úì Working directory:", os.getcwd())
    print()
    
    print("Paso 1: Cargando variables de entorno...")
    from dotenv import load_dotenv
    result = load_dotenv()
    print(f"‚úì .env cargado: {result}")
    print(f"‚úì AZURE_AI_KEY presente: {'AZURE_AI_KEY' in os.environ}")
    print()
    
    print("Paso 2: Importando configuraci√≥n...")
    from src.config import config
    print(f"‚úì Config cargada")
    print(f"  - Endpoint: {config.azure_ai_endpoint[:50]}...")
    print(f"  - Modelo: {config.azure_ai_model}")
    print()
    
    print("Paso 3: Verificando conexi√≥n a Redis...")
    import redis
    r = redis.Redis(host='localhost', port=6379, db=0, decode_responses=True)
    r.ping()
    print("‚úì Redis/Valkey conectado")
    print()
    
    print("Paso 4: Verificando LangChain...")
    from langchain.llms.base import BaseLLM
    print("‚úì LangChain importado")
    print()
    
    print("Paso 5: Verificando ChromaDB...")
    import chromadb
    print("‚úì ChromaDB importado")
    print()
    
    print("üéâ Todas las dependencias b√°sicas funcionan!")
    print("El sistema ag√©ntico est√° listo para funcionar.")
    
except Exception as e:
    print(f"‚ùå Error en: {e}")
    import traceback
    traceback.print_exc() 